//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Safa_Packs/Swipe System/Swipe Control Action.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @SwipeControlAction : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @SwipeControlAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Swipe Control Action"",
    ""maps"": [
        {
            ""name"": ""SwipeControls"",
            ""id"": ""be476195-b1d1-4b67-ba78-8838beacaf25"",
            ""actions"": [
                {
                    ""name"": ""OnStartSwipe"",
                    ""type"": ""PassThrough"",
                    ""id"": ""cc26a244-c0b0-454a-99ff-abd3bb94896b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OnEndSwipe"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4625ebc7-65cf-4212-ba68-cdfc795955eb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Position"",
                    ""type"": ""PassThrough"",
                    ""id"": ""81dc0947-6877-458a-a064-aa56b5227556"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""aa91ab28-e21f-433e-95b8-46def98b4ee1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OnStartSwipe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e5994b6-2879-4453-852e-3b25529c3519"",
                    ""path"": ""<Touchscreen>/primaryTouch/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OnStartSwipe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6040cc7-347f-4c05-9858-db230ffd69d8"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OnEndSwipe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73080b15-1a08-46e2-aa2b-34f1ebebee15"",
                    ""path"": ""<Touchscreen>/primaryTouch/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OnEndSwipe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""09a2064d-cb98-4b17-a96b-5c95d71e36cc"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f049dc3-0713-4b5a-8001-002fd58a74f9"",
                    ""path"": ""<Touchscreen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // SwipeControls
        m_SwipeControls = asset.FindActionMap("SwipeControls", throwIfNotFound: true);
        m_SwipeControls_OnStartSwipe = m_SwipeControls.FindAction("OnStartSwipe", throwIfNotFound: true);
        m_SwipeControls_OnEndSwipe = m_SwipeControls.FindAction("OnEndSwipe", throwIfNotFound: true);
        m_SwipeControls_Position = m_SwipeControls.FindAction("Position", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // SwipeControls
    private readonly InputActionMap m_SwipeControls;
    private ISwipeControlsActions m_SwipeControlsActionsCallbackInterface;
    private readonly InputAction m_SwipeControls_OnStartSwipe;
    private readonly InputAction m_SwipeControls_OnEndSwipe;
    private readonly InputAction m_SwipeControls_Position;
    public struct SwipeControlsActions
    {
        private @SwipeControlAction m_Wrapper;
        public SwipeControlsActions(@SwipeControlAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @OnStartSwipe => m_Wrapper.m_SwipeControls_OnStartSwipe;
        public InputAction @OnEndSwipe => m_Wrapper.m_SwipeControls_OnEndSwipe;
        public InputAction @Position => m_Wrapper.m_SwipeControls_Position;
        public InputActionMap Get() { return m_Wrapper.m_SwipeControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SwipeControlsActions set) { return set.Get(); }
        public void SetCallbacks(ISwipeControlsActions instance)
        {
            if (m_Wrapper.m_SwipeControlsActionsCallbackInterface != null)
            {
                @OnStartSwipe.started -= m_Wrapper.m_SwipeControlsActionsCallbackInterface.OnOnStartSwipe;
                @OnStartSwipe.performed -= m_Wrapper.m_SwipeControlsActionsCallbackInterface.OnOnStartSwipe;
                @OnStartSwipe.canceled -= m_Wrapper.m_SwipeControlsActionsCallbackInterface.OnOnStartSwipe;
                @OnEndSwipe.started -= m_Wrapper.m_SwipeControlsActionsCallbackInterface.OnOnEndSwipe;
                @OnEndSwipe.performed -= m_Wrapper.m_SwipeControlsActionsCallbackInterface.OnOnEndSwipe;
                @OnEndSwipe.canceled -= m_Wrapper.m_SwipeControlsActionsCallbackInterface.OnOnEndSwipe;
                @Position.started -= m_Wrapper.m_SwipeControlsActionsCallbackInterface.OnPosition;
                @Position.performed -= m_Wrapper.m_SwipeControlsActionsCallbackInterface.OnPosition;
                @Position.canceled -= m_Wrapper.m_SwipeControlsActionsCallbackInterface.OnPosition;
            }
            m_Wrapper.m_SwipeControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @OnStartSwipe.started += instance.OnOnStartSwipe;
                @OnStartSwipe.performed += instance.OnOnStartSwipe;
                @OnStartSwipe.canceled += instance.OnOnStartSwipe;
                @OnEndSwipe.started += instance.OnOnEndSwipe;
                @OnEndSwipe.performed += instance.OnOnEndSwipe;
                @OnEndSwipe.canceled += instance.OnOnEndSwipe;
                @Position.started += instance.OnPosition;
                @Position.performed += instance.OnPosition;
                @Position.canceled += instance.OnPosition;
            }
        }
    }
    public SwipeControlsActions @SwipeControls => new SwipeControlsActions(this);
    public interface ISwipeControlsActions
    {
        void OnOnStartSwipe(InputAction.CallbackContext context);
        void OnOnEndSwipe(InputAction.CallbackContext context);
        void OnPosition(InputAction.CallbackContext context);
    }
}
